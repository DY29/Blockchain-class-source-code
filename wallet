<!doctype html>
<html>
   <head>
       <meta charset="UTF-8">
       <meta http-equiv="Cache-Control" content="no-cache">
       <meta http-equiv="X-UA-Compatible" content="IE=edge">
       <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
      
       <script src="./node_modules/web3/dist/web3.js"></script>
       <script src="./node_modules/jquery/dist/jquery.js"></script>
       <script src="./node_modules/bootstrap/dist/js/bootstrap.js"></script>

       <link rel="stylesheet" href="./node_modules/bootstrap/dist/css/bootstrap.css">
       <style>
           label {
               min-width: 200px !important;
               display: inline-block !important;
           }
       </style>
   </head>
   <body>
       <div class="container">
           <!-- 제목 -->
           <div class="row">
               <h1>ETHER Wallet</h1>
           </div>
            <!-- 계좌 잔고 출력 -->
            <div class = "row">
                <div id = "divStatus">
                <table class = "table table-striped">
                    <thead class = "thead-dark">
                        <tr>
                            <th scope = "row">계좌</th>
                            <th>잔액</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope = "row">aaaa</td>
                            <td>11111</td>
                        </tr>
                        <tr>
                            <td scope = "row">aaaa</td>
                            <td>11111</td>
                        </tr>
                        <tr>
                            <td scope = "row">aaaa</td>
                            <td>11111</td>
                        </tr>    
                    </tbody>
                </table>
                </div>
            </div>
           <!-- 송금 입력 창 -->
           <div class="row">
               <div class="input-group">
                   <label class="input-group-text" for="fromAccounts">보내는 사람</label>                   
                   <select class="form-control accountsList" id="fromAccounts">
                       <option selected>선택하세요.</option>
                   </select>
               </div>
               <div class="input-group">
                   <label class="input-group-text" for="fromPassword">패스워드</label> 
                   <input class="form-control" id="fromPassword" type="password" />
               </div>
               <div class="input-group">
                   <label class="input-group-text" for="toAccounts">받는 사람</label>
                   <select class="form-control accountsList" id="toAccounts">
                       <option selected>선택하세요.</option>
                   </select>
               </div>
               <div class="input-group">
                   <label class="input-group-text" for="amount">송금액</label>
                   <input class="form-control" id="amount" type="number" />
                   <div class="input-group-append">
                       <span class="input-group-text">ETHER</span>
                       <button type="button" class="btn btn-primary" id="btnSend">송금</button>
                   </div>
               </div>
           </div>
       </div>

       <script>
           var WEB3 = require('web3');
           var web3 = new WEB3();
           web3.setProvider(new web3.providers.HttpProvider("http://localhost:8545"));

           // 계정 정보를 조회해서 보내는 사람과 받는 사람 선택창에 설정
           function setAccountsList() {
               let accounts = web3.eth.accounts;
               accounts.forEach(account => {
                   $('.accountsList').append(`
                       <option value="${account}">
                           ${account.substr(0,6)}...${account.substr(-4)}
                       </option>
                   `);       
               });
           }

           // 계정별 잔액을 출력
           function showStatus() {
               let table = `
                   <table class="table table-striped">
                   <thead class="thead-dark">
                       <tr>
                           <th scope="col">계정</th>
                           <th scope="col">잔액</th>
                       </tr>
                   </thead>
                   <tbody>
                   </tbody>
                   </table>
               `;
               $('#divStatus').empty();
               $('#divStatus').append(table);

               let totalAmount = 0;
               let accounts = web3.eth.accounts;
               accounts.forEach(account => {
                   let balance = parseFloat(web3.fromWei(web3.eth.getBalance(account), "ether"));
                   totalAmount += balance;
                   $('tbody').append(`<tr><td>${account}</td><td>${balance}</td></tr>`);
               });
               $('tbody').append(`<tr><td>총액</td><td>${totalAmount}</td></tr>`)
           }

           $(function() {
               setAccountsList();
               showStatus();
              
               // 블록에 변화가 생겼을 때 계정별 잔액 정보를 갱신
               web3.eth.filter('latest').watch(function() {
                   showStatus();
               });

               // 송금 버튼을 클릭했을 때, 송금을 요청
               $('#btnSend').click(function() {
                   let fromAccount  = $('#fromAccounts').val();
                   let toAccount    = $('#toAccounts').val();
                   let fromPassword = $('#fromPassword').val();
                   let amount       = $('#amount').val();
                  
                   // 보내는 사람의 계정을 언락
                   let isUnlock = web3.personal.unlockAccount(fromAccount, fromPassword);
                   if (isUnlock) {
                       web3.eth.sendTransaction({
                           from : fromAccount,
                           to   : toAccount,
                           value: web3.toWei(amount, "ether")
                       }, function(err, res) {
                           if (!err) {
                               console.log(`txid is ${res}.`);
                           } else {
                               console.error(err);
                           }
                       });
                   }

                   // sendTransaction()



               });
           });
          
       </script>
   </body>
</html>





